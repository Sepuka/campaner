// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/sepuka/campaner/internal/domain"
	mock "github.com/stretchr/testify/mock"
)

// TaskManager is an autogenerated mock type for the TaskManager type
type TaskManager struct {
	mock.Mock
}

// Add provides a mock function with given fields: _a0
func (_m TaskManager) Add(_a0 *domain.Reminder) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Reminder) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Cancel provides a mock function with given fields: _a0
func (_m TaskManager) Cancel(_a0 *domain.Reminder) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Reminder) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Copy provides a mock function with given fields: _a0
func (_m TaskManager) Copy(_a0 *domain.Reminder) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Reminder) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Shift provides a mock function with given fields: _a0
func (_m TaskManager) Shift(_a0 *domain.Reminder) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Reminder) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
